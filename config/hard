// Description: This file defines the candies and their effects in the game.
// Users can define their own candies and effects by modifying this file.
// Each candy must have a predefined effect. Users need to define the effect before assigning it to a candy.
// 
// Effect Definition:
// - `effect_name`: The name of the effect.
// - `effect_range`: The range of the effect.
// - `effect_requirement`: The number of candies required to trigger the effect. 
//    - Effects with the same requirement may randomly trigger if matched simultaneously.
//    - Supports comparison operators [`>`, `>=`, `=`] (default is `=`).
// - `effect_description`: A textual explanation of the effect.
//
// Range Definitions:
// There are 4 types of effect ranges:
// 
// # Circle
// Parameters: `radius`
// Effect Range: Includes all positions `(dx, dy)` where `dx² + dy² <= radius²`, relative to `(x, y)`.
// Example: For `radius = 2`, the effect range includes `(0,0), (0,1), (0,-1), (1,0), (-1,0), (1,1), (-1,-1), (1,-1), (-1,1)`.
//
// # Rectangle
// Parameters: `width`, `height`
// Effect Range:
// - If `width = 1`: Includes all positions in the current row. Equivalent to `Arbitrary [(0, :)]`.
// - If `width` is even: Expands equally to both sides but includes one extra row upward.
// - If `width` is odd: Expands symmetrically above and below the current row.
// - Same logic applies to `height` in the vertical direction. (Even height includes one extra column to the left.)
// Example: For `width = 3, height = 2`, the range includes rows `[x-1, x]` and columns `[y-1, y, y+1]`.
//
// # Diamond
// Parameters: `radius`
// Effect Range: Includes all positions `(dx, dy)` where `|dx| + |dy| <= radius`, forming a diamond shape centered at `(x, y)`.
// Example: For `radius = 2`, the range includes `(0,0), (0,1), (0,-1), (1,0), (-1,0), (1,1), (-1,-1), (1,-1), (-1,1), (2,0), (-2,0), (0,2), (0,-2)`.
//
// # Arbitrary
// Parameters: List of offsets
// Effect Range: Takes a predefined list of relative offsets `(dx, dy)`.
// - `x > 0`: Downward, e.g., `(1, 0)` means the cell below.
// - `x < 0`: Upward, e.g., `(-1, 0)` means the cell above.
// - `y > 0`: Rightward, e.g., `(0, 1)` means the cell to the right.
// - `y < 0`: Leftward, e.g., `(0, -1)` means the cell to the left.
// - `x = :`: Includes all positions in the current row.
// - `y = :`: Includes all positions in the current column.
// Example: `[(0, :), (:, 0)]` represents an entire row and column crossing `(x, y)`.

effect_name: Normal
effect_range: Arbitrary [(0, 0)]
effect_requirement: =0
effect_description: Matches normal candies with other normal candies.

effect_name: CircleBomb
effect_range: Circle 2
effect_requirement: =5
effect_description: Clears a circular area of radius 2 when matched.

effect_name: DiamondBomb
effect_range: Diamond 2
effect_requirement: =5
effect_description: Clears a diamond-shaped area of radius 2 when matched.

effect_name: Bomb
effect_range: Rectangle 3 3
effect_requirement: =5
effect_description: Clears all candies in a 3x3 area when matched.

effect_name: StripedCross
effect_range: Arbitrary [(0, :), (:, 0)]
effect_requirement: >= 5
effect_description: Clears the entire row and column when matched.

effect_name: StripedRow
effect_range: Arbitrary [(0, :)]
effect_requirement: =4
effect_description: Clears the entire row when matched.

GAME_CONSTANT
dimension: 9
max_steps: 30
// score per candy that is crushed
score_per_candy: 10 
// bouns score per effect that is triggered
score_per_effect: 50 

shape_name: Triangle
shape_icon: 🔺
effect_name: Normal

shape_name: Ice
shape_icon: 🧊
effect_name: Normal

shape_name: Burger
shape_icon: 🍔
effect_name: Normal

shape_name: Heart
shape_icon: 💖
effect_name: Normal

shape_name: donuts
shape_icon: 🍩
effect_name: Normal

shape_name: Pancake
shape_icon: 🥞
effect_name: Normal

// clears a circular area of radius 2
shape_name: CircleBomb
shape_icon: ⚽️
effect_name: CircleBomb

shape_name: DiamondBomb
shape_icon: 💠
effect_name: DiamondBomb

// clears a 3x3 area 
shape_name: Bomb
shape_icon: 💣
effect_name: Bomb

// clears the entire row and column
shape_name: StripedCross
shape_icon: ❌
effect_name: StripedCross

shape_name: StripedRow
shape_icon: 🍭
effect_name: StripedRow
